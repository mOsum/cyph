'use strict';var lang_1 = require('angular2/src/facade/lang');
// This is here only so that after TS transpilation the file is not empty.
// TODO(rado): find a better way to fix this, or remove if likely culprit
// https://github.com/systemjs/systemjs/issues/487 gets closed.
var __ignore_me = lang_1.global;
var __make_dart_analyzer_happy = null;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRpZmZpbmdfcGx1Z2luX3dyYXBwZXItb3V0cHV0X3BhdGgtUHZPdVJqdngudG1wL2FuZ3VsYXIyL3NyYy9yb3V0ZXIvaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxxQkFBcUIsMEJBQTBCLENBQUMsQ0FBQTtBQUVoRCwwRUFBMEU7QUFDMUUseUVBQXlFO0FBQ3pFLCtEQUErRDtBQUMvRCxJQUFJLFdBQVcsR0FBRyxhQUFNLENBQUM7QUFDekIsSUFBSSwwQkFBMEIsR0FBaUIsSUFBSSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnRJbnN0cnVjdGlvbn0gZnJvbSAnLi9pbnN0cnVjdGlvbic7XG5pbXBvcnQge2dsb2JhbH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcblxuLy8gVGhpcyBpcyBoZXJlIG9ubHkgc28gdGhhdCBhZnRlciBUUyB0cmFuc3BpbGF0aW9uIHRoZSBmaWxlIGlzIG5vdCBlbXB0eS5cbi8vIFRPRE8ocmFkbyk6IGZpbmQgYSBiZXR0ZXIgd2F5IHRvIGZpeCB0aGlzLCBvciByZW1vdmUgaWYgbGlrZWx5IGN1bHByaXRcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zeXN0ZW1qcy9zeXN0ZW1qcy9pc3N1ZXMvNDg3IGdldHMgY2xvc2VkLlxudmFyIF9faWdub3JlX21lID0gZ2xvYmFsO1xudmFyIF9fbWFrZV9kYXJ0X2FuYWx5emVyX2hhcHB5OiBQcm9taXNlPGFueT4gPSBudWxsO1xuXG4vKipcbiAqIERlZmluZXMgcm91dGUgbGlmZWN5Y2xlIG1ldGhvZCBgcm91dGVyT25BY3RpdmF0ZWAsIHdoaWNoIGlzIGNhbGxlZCBieSB0aGUgcm91dGVyIGF0IHRoZSBlbmQgb2YgYVxuICogc3VjY2Vzc2Z1bCByb3V0ZSBuYXZpZ2F0aW9uLlxuICpcbiAqIEZvciBhIHNpbmdsZSBjb21wb25lbnQncyBuYXZpZ2F0aW9uLCBvbmx5IG9uZSBvZiBlaXRoZXIge0BsaW5rIE9uQWN0aXZhdGV9IG9yIHtAbGluayBPblJldXNlfVxuICogd2lsbCBiZSBjYWxsZWQgZGVwZW5kaW5nIG9uIHRoZSByZXN1bHQgb2Yge0BsaW5rIENhblJldXNlfS5cbiAqXG4gKiBUaGUgYHJvdXRlck9uQWN0aXZhdGVgIGhvb2sgaXMgY2FsbGVkIHdpdGggdHdvIHtAbGluayBDb21wb25lbnRJbnN0cnVjdGlvbn1zIGFzIHBhcmFtZXRlcnMsIHRoZVxuICogZmlyc3RcbiAqIHJlcHJlc2VudGluZyB0aGUgY3VycmVudCByb3V0ZSBiZWluZyBuYXZpZ2F0ZWQgdG8sIGFuZCB0aGUgc2Vjb25kIHBhcmFtZXRlciByZXByZXNlbnRpbmcgdGhlXG4gKiBwcmV2aW91cyByb3V0ZSBvciBgbnVsbGAuXG4gKlxuICogSWYgYHJvdXRlck9uQWN0aXZhdGVgIHJldHVybnMgYSBwcm9taXNlLCB0aGUgcm91dGUgY2hhbmdlIHdpbGwgd2FpdCB1bnRpbCB0aGUgcHJvbWlzZSBzZXR0bGVzIHRvXG4gKiBpbnN0YW50aWF0ZSBhbmQgYWN0aXZhdGUgY2hpbGQgY29tcG9uZW50cy5cbiAqXG4gKiAjIyMgRXhhbXBsZVxuICoge0BleGFtcGxlIHJvdXRlci90cy9vbl9hY3RpdmF0ZS9vbl9hY3RpdmF0ZV9leGFtcGxlLnRzIHJlZ2lvbj0ncm91dGVyT25BY3RpdmF0ZSd9XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgT25BY3RpdmF0ZSB7XG4gIHJvdXRlck9uQWN0aXZhdGUobmV4dEluc3RydWN0aW9uOiBDb21wb25lbnRJbnN0cnVjdGlvbiwgcHJldkluc3RydWN0aW9uOiBDb21wb25lbnRJbnN0cnVjdGlvbik6XG4gICAgICBhbnl8UHJvbWlzZTxhbnk+O1xufVxuXG4vKipcbiAqIERlZmluZXMgcm91dGUgbGlmZWN5Y2xlIG1ldGhvZCBgcm91dGVyT25SZXVzZWAsIHdoaWNoIGlzIGNhbGxlZCBieSB0aGUgcm91dGVyIGF0IHRoZSBlbmQgb2YgYVxuICogc3VjY2Vzc2Z1bCByb3V0ZSBuYXZpZ2F0aW9uIHdoZW4ge0BsaW5rIENhblJldXNlfSBpcyBpbXBsZW1lbnRlZCBhbmQgcmV0dXJucyBvciByZXNvbHZlcyB0byB0cnVlLlxuICpcbiAqIEZvciBhIHNpbmdsZSBjb21wb25lbnQncyBuYXZpZ2F0aW9uLCBvbmx5IG9uZSBvZiBlaXRoZXIge0BsaW5rIE9uQWN0aXZhdGV9IG9yIHtAbGluayBPblJldXNlfVxuICogd2lsbCBiZSBjYWxsZWQsIGRlcGVuZGluZyBvbiB0aGUgcmVzdWx0IG9mIHtAbGluayBDYW5SZXVzZX0uXG4gKlxuICogVGhlIGByb3V0ZXJPblJldXNlYCBob29rIGlzIGNhbGxlZCB3aXRoIHR3byB7QGxpbmsgQ29tcG9uZW50SW5zdHJ1Y3Rpb259cyBhcyBwYXJhbWV0ZXJzLCB0aGVcbiAqIGZpcnN0XG4gKiByZXByZXNlbnRpbmcgdGhlIGN1cnJlbnQgcm91dGUgYmVpbmcgbmF2aWdhdGVkIHRvLCBhbmQgdGhlIHNlY29uZCBwYXJhbWV0ZXIgcmVwcmVzZW50aW5nIHRoZVxuICogcHJldmlvdXMgcm91dGUgb3IgYG51bGxgLlxuICpcbiAqICMjIyBFeGFtcGxlXG4gKiB7QGV4YW1wbGUgcm91dGVyL3RzL3JldXNlL3JldXNlX2V4YW1wbGUudHMgcmVnaW9uPSdyZXVzZUNtcCd9XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgT25SZXVzZSB7XG4gIHJvdXRlck9uUmV1c2UobmV4dEluc3RydWN0aW9uOiBDb21wb25lbnRJbnN0cnVjdGlvbiwgcHJldkluc3RydWN0aW9uOiBDb21wb25lbnRJbnN0cnVjdGlvbik6IGFueVxuICAgICAgfFByb21pc2U8YW55Pjtcbn1cblxuLyoqXG4gKiBEZWZpbmVzIHJvdXRlIGxpZmVjeWNsZSBtZXRob2QgYHJvdXRlck9uRGVhY3RpdmF0ZWAsIHdoaWNoIGlzIGNhbGxlZCBieSB0aGUgcm91dGVyIGJlZm9yZVxuICogZGVzdHJveWluZ1xuICogYSBjb21wb25lbnQgYXMgcGFydCBvZiBhIHJvdXRlIGNoYW5nZS5cbiAqXG4gKiBUaGUgYHJvdXRlck9uRGVhY3RpdmF0ZWAgaG9vayBpcyBjYWxsZWQgd2l0aCB0d28ge0BsaW5rIENvbXBvbmVudEluc3RydWN0aW9ufXMgYXMgcGFyYW1ldGVycywgdGhlXG4gKiBmaXJzdFxuICogcmVwcmVzZW50aW5nIHRoZSBjdXJyZW50IHJvdXRlIGJlaW5nIG5hdmlnYXRlZCB0bywgYW5kIHRoZSBzZWNvbmQgcGFyYW1ldGVyIHJlcHJlc2VudGluZyB0aGVcbiAqIHByZXZpb3VzIHJvdXRlLlxuICpcbiAqIElmIGByb3V0ZXJPbkRlYWN0aXZhdGVgIHJldHVybnMgYSBwcm9taXNlLCB0aGUgcm91dGUgY2hhbmdlIHdpbGwgd2FpdCB1bnRpbCB0aGUgcHJvbWlzZSBzZXR0bGVzLlxuICpcbiAqICMjIyBFeGFtcGxlXG4gKiB7QGV4YW1wbGUgcm91dGVyL3RzL29uX2RlYWN0aXZhdGUvb25fZGVhY3RpdmF0ZV9leGFtcGxlLnRzIHJlZ2lvbj0ncm91dGVyT25EZWFjdGl2YXRlJ31cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBPbkRlYWN0aXZhdGUge1xuICByb3V0ZXJPbkRlYWN0aXZhdGUobmV4dEluc3RydWN0aW9uOiBDb21wb25lbnRJbnN0cnVjdGlvbiwgcHJldkluc3RydWN0aW9uOiBDb21wb25lbnRJbnN0cnVjdGlvbik6XG4gICAgICBhbnl8UHJvbWlzZTxhbnk+O1xufVxuXG4vKipcbiAqIERlZmluZXMgcm91dGUgbGlmZWN5Y2xlIG1ldGhvZCBgcm91dGVyQ2FuUmV1c2VgLCB3aGljaCBpcyBjYWxsZWQgYnkgdGhlIHJvdXRlciB0byBkZXRlcm1pbmVcbiAqIHdoZXRoZXIgYVxuICogY29tcG9uZW50IHNob3VsZCBiZSByZXVzZWQgYWNyb3NzIHJvdXRlcywgb3Igd2hldGhlciB0byBkZXN0cm95IGFuZCBpbnN0YW50aWF0ZSBhIG5ldyBjb21wb25lbnQuXG4gKlxuICogVGhlIGByb3V0ZXJDYW5SZXVzZWAgaG9vayBpcyBjYWxsZWQgd2l0aCB0d28ge0BsaW5rIENvbXBvbmVudEluc3RydWN0aW9ufXMgYXMgcGFyYW1ldGVycywgdGhlXG4gKiBmaXJzdFxuICogcmVwcmVzZW50aW5nIHRoZSBjdXJyZW50IHJvdXRlIGJlaW5nIG5hdmlnYXRlZCB0bywgYW5kIHRoZSBzZWNvbmQgcGFyYW1ldGVyIHJlcHJlc2VudGluZyB0aGVcbiAqIHByZXZpb3VzIHJvdXRlLlxuICpcbiAqIElmIGByb3V0ZXJDYW5SZXVzZWAgcmV0dXJucyBvciByZXNvbHZlcyB0byBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgaW5zdGFuY2Ugd2lsbCBiZSByZXVzZWQgYW5kIHRoZVxuICoge0BsaW5rIE9uRGVhY3RpdmF0ZX0gaG9vayB3aWxsIGJlIHJ1bi4gSWYgYHJvdXRlckNhblJldXNlYCByZXR1cm5zIG9yIHJlc29sdmVzIHRvIGBmYWxzZWAsIGEgbmV3XG4gKiBjb21wb25lbnQgd2lsbCBiZSBpbnN0YW50aWF0ZWQsIGFuZCB0aGUgZXhpc3RpbmcgY29tcG9uZW50IHdpbGwgYmUgZGVhY3RpdmF0ZWQgYW5kIHJlbW92ZWQgYXNcbiAqIHBhcnQgb2YgdGhlIG5hdmlnYXRpb24uXG4gKlxuICogSWYgYHJvdXRlckNhblJldXNlYCB0aHJvd3Mgb3IgcmVqZWN0cywgdGhlIG5hdmlnYXRpb24gd2lsbCBiZSBjYW5jZWxsZWQuXG4gKlxuICogIyMjIEV4YW1wbGVcbiAqIHtAZXhhbXBsZSByb3V0ZXIvdHMvcmV1c2UvcmV1c2VfZXhhbXBsZS50cyByZWdpb249J3JldXNlQ21wJ31cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDYW5SZXVzZSB7XG4gIHJvdXRlckNhblJldXNlKG5leHRJbnN0cnVjdGlvbjogQ29tcG9uZW50SW5zdHJ1Y3Rpb24sIHByZXZJbnN0cnVjdGlvbjogQ29tcG9uZW50SW5zdHJ1Y3Rpb24pOlxuICAgICAgYm9vbGVhbnxQcm9taXNlPGJvb2xlYW4+O1xufVxuXG4vKipcbiAqIERlZmluZXMgcm91dGUgbGlmZWN5Y2xlIG1ldGhvZCBgcm91dGVyQ2FuRGVhY3RpdmF0ZWAsIHdoaWNoIGlzIGNhbGxlZCBieSB0aGUgcm91dGVyIHRvIGRldGVybWluZVxuICogaWYgYSBjb21wb25lbnQgY2FuIGJlIHJlbW92ZWQgYXMgcGFydCBvZiBhIG5hdmlnYXRpb24uXG4gKlxuICogVGhlIGByb3V0ZXJDYW5EZWFjdGl2YXRlYCBob29rIGlzIGNhbGxlZCB3aXRoIHR3byB7QGxpbmsgQ29tcG9uZW50SW5zdHJ1Y3Rpb259cyBhcyBwYXJhbWV0ZXJzLFxuICogdGhlXG4gKiBmaXJzdCByZXByZXNlbnRpbmcgdGhlIGN1cnJlbnQgcm91dGUgYmVpbmcgbmF2aWdhdGVkIHRvLCBhbmQgdGhlIHNlY29uZCBwYXJhbWV0ZXJcbiAqIHJlcHJlc2VudGluZyB0aGUgcHJldmlvdXMgcm91dGUuXG4gKlxuICogSWYgYHJvdXRlckNhbkRlYWN0aXZhdGVgIHJldHVybnMgb3IgcmVzb2x2ZXMgdG8gYGZhbHNlYCwgdGhlIG5hdmlnYXRpb24gaXMgY2FuY2VsbGVkLiBJZiBpdFxuICogcmV0dXJucyBvclxuICogcmVzb2x2ZXMgdG8gYHRydWVgLCB0aGVuIHRoZSBuYXZpZ2F0aW9uIGNvbnRpbnVlcywgYW5kIHRoZSBjb21wb25lbnQgd2lsbCBiZSBkZWFjdGl2YXRlZFxuICogKHRoZSB7QGxpbmsgT25EZWFjdGl2YXRlfSBob29rIHdpbGwgYmUgcnVuKSBhbmQgcmVtb3ZlZC5cbiAqXG4gKiBJZiBgcm91dGVyQ2FuRGVhY3RpdmF0ZWAgdGhyb3dzIG9yIHJlamVjdHMsIHRoZSBuYXZpZ2F0aW9uIGlzIGFsc28gY2FuY2VsbGVkLlxuICpcbiAqICMjIyBFeGFtcGxlXG4gKiB7QGV4YW1wbGUgcm91dGVyL3RzL2Nhbl9kZWFjdGl2YXRlL2Nhbl9kZWFjdGl2YXRlX2V4YW1wbGUudHMgcmVnaW9uPSdyb3V0ZXJDYW5EZWFjdGl2YXRlJ31cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDYW5EZWFjdGl2YXRlIHtcbiAgcm91dGVyQ2FuRGVhY3RpdmF0ZShuZXh0SW5zdHJ1Y3Rpb246IENvbXBvbmVudEluc3RydWN0aW9uLCBwcmV2SW5zdHJ1Y3Rpb246IENvbXBvbmVudEluc3RydWN0aW9uKTpcbiAgICAgIGJvb2xlYW58UHJvbWlzZTxib29sZWFuPjtcbn1cbiJdfQ==